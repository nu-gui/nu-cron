name: AI PR Validation

on:
  pull_request:
    branches:
      - main
    paths:
      - 'devin/**'

jobs:
  validate-ai-changes:
    name: Validate AI-Generated Changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate AI Task History
        run: |
          if ! grep -q "Task:" devin/logs/AI-Task-History.md; then
            echo "Error: AI Task History missing required format"
            exit 1
          fi
      
      - name: Check PR Description
        run: |
          PR_BODY=$(gh pr view ${{ github.event.pull_request.number }} --json body -q .body)
          if ! echo "$PR_BODY" | grep -q "Link to Devin run"; then
            echo "Error: PR description missing Devin run link"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Security Scan AI Changes
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium
      
      - name: Validate Kubernetes Resources
        run: |
          if [ -d "kubernetes/" ]; then
            find kubernetes/ -type f \( -name "*.yaml" -o -name "*.yml" -o -name "*.json" \) -exec kubectl apply --dry-run=client -f {} \;
          fi

  ai-quality-gates:
    name: AI Quality Gates
    needs: validate-ai-changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          npm ci
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Check Code Style
        run: |
          npm run lint
          python -m flake8
          python -m black --check .
          python -m isort --check-only .
      
      - name: Run Tests with Coverage
        run: |
          npm test -- --coverage --passWithNoTests
          python -m pytest --cov=. --cov-report=xml
      
      - name: Check Test Coverage
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium
      
      - name: Check Documentation
        run: |
          if ! grep -q "SDLC Phase:" devin/logs/AI-Task-History.md; then
            echo "Error: AI Task History missing SDLC Phase"
            exit 1
          fi
          if ! grep -q "Next Suggested Tasks:" devin/logs/AI-Task-History.md; then
            echo "Error: AI Task History missing Next Suggested Tasks"
            exit 1
          fi
          if ! grep -q "Changes Made:" devin/logs/AI-Task-History.md; then
            echo "Error: AI Task History missing Changes Made section"
            exit 1
          fi
          if ! grep -q "Key Achievements:" devin/logs/AI-Task-History.md; then
            echo "Error: AI Task History missing Key Achievements"
            exit 1
          fi
      
      - name: Check Kubernetes Resources
        run: |
          if [ -d "kubernetes/" ]; then
            kubectl apply --dry-run=client -f kubernetes/
          fi
      
      - name: Performance Check
        run: |
          if [ -f "tests/performance/locustfile.py" ]; then
            python -m locust --headless -f tests/performance/locustfile.py --run-time 1m
          fi
      
      - name: Post Results
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const summary = `### AI Quality Gate Results
            - Documentation Check: ${process.env.DOCS_CHECK}
            - Code Style: ${process.env.STYLE_CHECK}
            - Tests: ${process.env.TEST_CHECK}
            
            Please review the results and make necessary adjustments.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: summary
            });
