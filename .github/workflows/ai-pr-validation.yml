name: AI PR Validation

on:
  pull_request:
    branches:
      - main
    paths:
      - 'devin/**'

jobs:
  validate-ai-changes:
    name: Validate AI-Generated Changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate AI Task History
        run: |
          if ! grep -q "Task:" devin/logs/AI-Task-History.md; then
            echo "Error: AI Task History missing required format"
            exit 1
          fi
      
      - name: Check PR Description
        run: |
          PR_BODY=$(gh pr view ${{ github.event.pull_request.number }} --json body -q .body)
          if ! echo "$PR_BODY" | grep -q "Link to Devin run"; then
            echo "Error: PR description missing Devin run link"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Security Scan AI Changes
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium
      
      - name: Validate Kubernetes Resources
        run: |
          if [ -d "kubernetes/" ]; then
            kubectl apply --dry-run=client -f kubernetes/
          fi

  ai-quality-gates:
    name: AI Quality Gates
    needs: validate-ai-changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check Code Style
        run: |
          npm run lint
          python -m flake8
      
      - name: Run Tests
        run: |
          npm test
          python -m pytest
      
      - name: Check Documentation
        run: |
          if ! grep -q "SDLC Phase:" devin/logs/AI-Task-History.md; then
            echo "Error: AI Task History missing SDLC Phase"
            exit 1
          fi
          if ! grep -q "Next Suggested Tasks:" devin/logs/AI-Task-History.md; then
            echo "Error: AI Task History missing Next Suggested Tasks"
            exit 1
          fi
      
      - name: Post Results
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const summary = `### AI Quality Gate Results
            - Documentation Check: ${process.env.DOCS_CHECK}
            - Code Style: ${process.env.STYLE_CHECK}
            - Tests: ${process.env.TEST_CHECK}
            
            Please review the results and make necessary adjustments.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: summary
            });
