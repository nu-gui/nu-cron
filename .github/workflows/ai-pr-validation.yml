name: AI PR Validation

on:
  pull_request:
    branches:
      - main
      - 'devin/**'

jobs:
  validate:
    name: Validate AI-Generated Changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate AI Task History
        run: |
          if ! grep -q "Task:" devin/logs/AI-Task-History.md; then
            echo "Error: AI Task History missing required format"
            exit 1
          fi
      
      - name: Check PR Description
        run: |
          PR_BODY=$(gh pr view ${{ github.event.pull_request.number }} --json body -q .body)
          if ! echo "$PR_BODY" | grep -q "Link to Devin run"; then
            echo "Error: PR description missing Devin run link"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Security Scan AI Changes
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium
      
      - name: Validate Kubernetes Resources
        run: |
          if [ -d "kubernetes/" ]; then
            find kubernetes/ -type f \( -name "*.yaml" -o -name "*.yml" -o -name "*.json" \) -exec kubectl apply --dry-run=client -f {} \;
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          
      - name: Install dependencies
        env:
          ENV: "production"
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REDIS_URL: "redis://localhost:6379/0"
          CODE_GENERATION_CACHE_TTL: "3600"
          TEST_GENERATION_CACHE_TTL: "3600"
        run: |
          sudo apt-get update
          sudo apt-get install -y libyaml-dev python3-dev
          npm ci
          DISABLE_CYTHON=1 poetry install
          poetry run pip check
      
      - name: Check Code Style
        run: |
          npm run lint
          poetry run flake8
          poetry run black --check .
          poetry run isort --check-only .
      
      - name: Run Tests with Coverage
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REDIS_URL: "redis://localhost:6379/0"
          CODE_GENERATION_CACHE_TTL: "3600"
          TEST_GENERATION_CACHE_TTL: "3600"
        run: |
          npm test -- --coverage --passWithNoTests
          poetry run pytest --cov=. --cov-report=xml
      
      - name: Check Test Coverage
        uses: coverallsapp/github-action@v2
